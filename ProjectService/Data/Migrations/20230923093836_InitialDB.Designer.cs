// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectService.Data;

#nullable disable

namespace ProjectService.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230923093836_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectService.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpNameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrgNameId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(8890),
                            Description = "No description",
                            Email = "test@mail.com",
                            EmpNameId = "emp1",
                            LastUpdatedOn = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(8890),
                            OrgNameId = "org1",
                            Username = "username1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(8894),
                            Description = "No description",
                            Email = "test@mail.com",
                            EmpNameId = "emp2",
                            LastUpdatedOn = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(8895),
                            OrgNameId = "org1",
                            Username = "username2"
                        });
                });

            modelBuilder.Entity("ProjectService.Models.EmployeeProjectAssociation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpNameId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrgNameId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectAssociations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9125),
                            Description = "The project manager",
                            EmpNameId = "emp1",
                            EmployeeId = 1,
                            LastUpdatedOn = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9126),
                            OrgNameId = "org1",
                            ProjectId = 1,
                            Role = "Project Manager"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9129),
                            Description = "The project manager",
                            EmpNameId = "emp2",
                            EmployeeId = 2,
                            LastUpdatedOn = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9129),
                            OrgNameId = "org1",
                            ProjectId = 1,
                            Role = "Supervisor"
                        });
                });

            modelBuilder.Entity("ProjectService.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgNameId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Progress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isOrg")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9098),
                            CreatorId = "user1",
                            Description = "Project 1 started",
                            Duration = "12 Months",
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedOn = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9098),
                            Name = "Project1",
                            OrgNameId = "org1",
                            Progress = "6 months",
                            StartDate = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9096),
                            Status = "In progres",
                            isOrg = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9102),
                            CreatorId = "user1",
                            Description = "Project 1 started",
                            Duration = "12 Months",
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedOn = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9103),
                            Name = "Project2",
                            Progress = "6 months",
                            StartDate = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9102),
                            Status = "In progres",
                            isOrg = false
                        });
                });

            modelBuilder.Entity("ProjectService.Models.ProjectForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrgNameId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectForms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9154),
                            CreatorId = "user1",
                            Description = "Form 1",
                            FormData = "{\"name\":\"Uhanmi V1\",\"description\":\"This is the first or cover image of Uhanmi NFT collection.\",\"image\":\"https://gateway.pinata.cloud/ipfs/QmXxtXrGznUsGoyMCRqCKVU53cuJPeQFxJHmWWiZ74TLvv\"}",
                            LastUpdatedOn = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9155),
                            OrgNameId = "org1",
                            ProjectId = 1,
                            Title = "Form1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9158),
                            CreatorId = "user1",
                            Description = "Form 2",
                            FormData = "{\"name\":\"Uhanmi V1\",\"description\":\"This is the first or cover image of Uhanmi NFT collection.\",\"image\":\"https://gateway.pinata.cloud/ipfs/QmXxtXrGznUsGoyMCRqCKVU53cuJPeQFxJHmWWiZ74TLvv\"}",
                            LastUpdatedOn = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9158),
                            ProjectId = 2,
                            Title = "Form2"
                        });
                });

            modelBuilder.Entity("ProjectService.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrgNameId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectFormId")
                        .HasColumnType("int");

                    b.Property<string>("ReportData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubmissionId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectFormId");

                    b.HasIndex("SubmissionId");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9186),
                            CreatorId = "user1",
                            Description = "Report 1",
                            LastUpdatedOn = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9187),
                            OrgNameId = "org1",
                            ReportData = "my report",
                            SubmissionId = 1,
                            Title = "Report1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9190),
                            CreatorId = "user1",
                            Description = "report 2",
                            LastUpdatedOn = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9191),
                            ReportData = "my report",
                            SubmissionId = 2,
                            Title = "Report2"
                        });
                });

            modelBuilder.Entity("ProjectService.Models.Submission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrgNameId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubmissionData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("Submissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9215),
                            CreatorId = "user1",
                            Description = "Submission 1",
                            FormId = 1,
                            LastUpdatedOn = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9215),
                            OrgNameId = "org1",
                            SubmissionData = "{\"name\":\"Uhanmi V1\",\"description\":\"This is the first or cover image of Uhanmi NFT collection.\",\"image\":\"https://gateway.pinata.cloud/ipfs/QmXxtXrGznUsGoyMCRqCKVU53cuJPeQFxJHmWWiZ74TLvv\"}",
                            Title = "Submission1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9219),
                            CreatorId = "user1",
                            Description = "Submission 2",
                            FormId = 2,
                            LastUpdatedOn = new DateTime(2023, 9, 23, 10, 38, 36, 739, DateTimeKind.Local).AddTicks(9219),
                            SubmissionData = "{\"name\":\"Uhanmi V1\",\"description\":\"This is the first or cover image of Uhanmi NFT collection.\",\"image\":\"https://gateway.pinata.cloud/ipfs/QmXxtXrGznUsGoyMCRqCKVU53cuJPeQFxJHmWWiZ74TLvv\"}",
                            Title = "Submission2"
                        });
                });

            modelBuilder.Entity("ProjectService.Models.EmployeeProjectAssociation", b =>
                {
                    b.HasOne("ProjectService.Models.Employee", "Employee")
                        .WithMany("ProjectAssociations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectService.Models.Project", "Project")
                        .WithMany("ProjectAssociations")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ProjectService.Models.ProjectForm", b =>
                {
                    b.HasOne("ProjectService.Models.Project", "Project")
                        .WithMany("ProjectForms")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ProjectService.Models.Report", b =>
                {
                    b.HasOne("ProjectService.Models.ProjectForm", null)
                        .WithMany("Reports")
                        .HasForeignKey("ProjectFormId");

                    b.HasOne("ProjectService.Models.Submission", "Submission")
                        .WithMany("Reports")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("ProjectService.Models.Submission", b =>
                {
                    b.HasOne("ProjectService.Models.ProjectForm", "ProjectForm")
                        .WithMany("Submissions")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectForm");
                });

            modelBuilder.Entity("ProjectService.Models.Employee", b =>
                {
                    b.Navigation("ProjectAssociations");
                });

            modelBuilder.Entity("ProjectService.Models.Project", b =>
                {
                    b.Navigation("ProjectAssociations");

                    b.Navigation("ProjectForms");
                });

            modelBuilder.Entity("ProjectService.Models.ProjectForm", b =>
                {
                    b.Navigation("Reports");

                    b.Navigation("Submissions");
                });

            modelBuilder.Entity("ProjectService.Models.Submission", b =>
                {
                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
